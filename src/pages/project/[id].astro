---
import Layout from "@/layouts/Layout.astro";
import ProjectCard from "@/components/carouselCards/Project/ProjectCard.astro";
import ArrowLeft from "@/components/icons/ArrowLeft.astro";
import ArrowRight from "@/components/icons/ArrowRight.astro";
import ArrowLeftBox from "@/components/icons/ArrowLeftBox.astro";
import { PROJECTS } from "@/constants/projects.ts";

const { id } = Astro.params;

const PROJECT = PROJECTS[Number(id) - 1] || PROJECTS[0];

const previusId = id === "1" ? PROJECTS.length : Number(id) - 1;
const nextId = id === PROJECTS.length.toString() ? 1 : Number(id) + 1;
---

<Layout title="Projects" description="Projects I've worked on.">
  <main class="h-screen uppercase p-6">
    <header class="flex items-center justify-between mb-6">
      <h1
        class="text-3xl text-slate-900 dark:text-slate-100/80 font-archivo-black"
      >
        Projects / Work
      </h1>
      <div class="text-xl text-green-400 font-oswald bg-zinc-800 px-2"></div>
    </header>
    <section
      class="relative w-full h-[calc(100%-92px)] grid grid-cols-1 grid-rows-3 sm:grid-rows-2 lg:grid-cols-3 2xl:grid-cols-4"
    >
      <div class="flex justify-center lg:justify-end lg:order-2">
        <ProjectCard project={PROJECT} />
      </div>
      <div
        class="row-span-2 col-span-2 2xl:col-span-3 relative w-full h-full self-end flex items-center justify-center overflow-hidden"
      >
        <div
          class="h-full flex flex-row lg:flex-col snap-both snap-mandatory overflow-y-auto scroll-smooth scrollbar-hide"
        >
          {
            PROJECT.images.map((image, index) => (
              <img
                id={`project-image-${index}`}
                src={image.src}
                alt="image of project"
                class="w-full h-full object-contain snap-center"
              />
            ))
          }
        </div>

        <div
          class="absolute max-lg:bottom-8 lg:left-0 my-auto flex flex-row lg:flex-col items-center text-slate-100/50"
        >
          <a
            id="previus-button"
            class="w-10 h-10 flex items-center justify-center lg:rotate-90 hover:text-slate-100 transition-all"
          >
            <ArrowLeft />
          </a>
          <div class="text-2xl font-archivo-black inline-flex">
            <span id="project-image-index" class="text-slate-100">1</span>
            <span class="text-slate-100/50">
              /{PROJECT.images.length}
            </span>
          </div>
          <a
            id="next-button"
            class="w-10 h-10 flex items-center justify-center lg:rotate-90 hover:text-slate-100 transition-all"
          >
            <ArrowRight />
          </a>
        </div>
      </div>
      <div class="w-full h-full flex items-end justify-end order-last">
        <div
          class="flex flex-row items-center justify-center text-slate-100/50 gap-2"
        >
          <a
            href={"/project/" + previusId}
            class="w-24 h-24 flex items-center justify-center hover:text-slate-100 transition-all"
          >
            <ArrowLeft />
          </a>
          <div class="text-5xl font-archivo-black inline-flex">
            <span id="project-id" class="text-slate-100">
              {id}
            </span>
            <span class="text-slate-100/50">
              /{PROJECTS.length}
            </span>
          </div>
          <a
            href={"/project/" + nextId}
            class="w-24 h-24 flex items-center justify-center hover:text-slate-100 transition-all"
          >
            <ArrowRight />
          </a>
        </div>
      </div>
    </section>
    <footer class="w-full">
      <a
        href="/"
        class="flex items-center text-slate-100/50 font-oswald hover:text-slate-100 transition-all"
      >
        <span class="w-6 h-6 mr-2">
          <ArrowLeftBox />
        </span>
        Back
      </a>
    </footer>
  </main>
</Layout>

<script>
  import { PROJECTS } from "@/constants/projects";

  document.addEventListener("astro:page-load", () => {
    const id = document.getElementById("project-id")?.textContent;

    const project = PROJECTS[Number(id) - 1] || PROJECTS[0];
    const images = project.images;

    let currentImage = 0;

    const spanIndex = document.getElementById(
      "project-image-index"
    ) as HTMLSpanElement;

    const previusButton = document.getElementById(
      "previus-button"
    ) as HTMLAnchorElement;
    const nextButton = document.getElementById(
      "next-button"
    ) as HTMLAnchorElement;

    previusButton.addEventListener("click", () => {
      currentImage = currentImage === 0 ? images.length - 1 : currentImage - 1;

      spanIndex.textContent = (currentImage + 1).toString();

      previusButton.href = "#project-image-" + currentImage;
    });

    nextButton.addEventListener("click", () => {
      currentImage = currentImage === images.length - 1 ? 0 : currentImage + 1;

      spanIndex.textContent = (currentImage + 1).toString();

      nextButton.href = "#project-image-" + currentImage;
    });
  });
</script>
